#include<stdio.h>
#include<conio.h>

typedef struct node
{
    int data;
    int priority;
    struct node* next;
}Node;
Node *newNode(int n,int m)
{
    Node *temp=(Node*)malloc(sizeof(Node));
    temp->data=n;
    temp->priority=m;
    temp->next=NULL;
    return temp;
}
int peek(Node **head)
{
    return (*head)->data;
}

void pop(Node **head)
{
    Node *temp=head;
    (*head)=(*head)->next;
    free(temp);
}

void push(Node **head,int n,int m)
{
    Node *start=(*head);
    Node *temp=newNode(n,m);
    if((*head)->priority>m)
    {
        temp->next=*head;
        (*head)=temp;
    }
    else
    {
        while(start->next!=NULL&&start->next->priority<m)
        {
            start=start->next;
        }
        temp->next=start->next;
        start->next=temp;
    }
}
int isEmpty(Node**head)
{
    return (*head)==NULL;
}

int main()
{
    Node* pq = newNode(7, 1);
   push(&pq, 1, 2);
   push(&pq, 3, 3);
   push(&pq, 2, 0);
   while (!isEmpty(&pq)) {
      printf("%d ", peek(&pq));
      pop(&pq);
   }
   return 0;
}
